// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"singlestore/internal/sdk/pkg/models/operations"
	"singlestore/internal/sdk/pkg/models/shared"
)

func (r *BillingResourceModel) ToCreateSDKType() *operations.ListBillingUsageRequest {
	aggregateBy := new(operations.ListBillingUsageAggregateBy)
	if !r.AggregateBy.IsUnknown() && !r.AggregateBy.IsNull() {
		*aggregateBy = operations.ListBillingUsageAggregateBy(r.AggregateBy.ValueString())
	} else {
		aggregateBy = nil
	}
	endTime := r.EndTime.ValueString()
	metric := new(operations.ListBillingUsageMetric)
	if !r.Metric.IsUnknown() && !r.Metric.IsNull() {
		*metric = operations.ListBillingUsageMetric(r.Metric.ValueString())
	} else {
		metric = nil
	}
	startTime := r.StartTime.ValueString()
	out := operations.ListBillingUsageRequest{
		AggregateBy: aggregateBy,
		EndTime:     endTime,
		Metric:      metric,
		StartTime:   startTime,
	}
	return &out
}

func (r *BillingResourceModel) RefreshFromCreateResponse(resp *shared.BillingUsage) {
	if resp.Description != nil {
		r.Description = types.StringValue(*resp.Description)
	} else {
		r.Description = types.StringNull()
	}
	if resp.Metric != nil {
		r.Metric = types.StringValue(*resp.Metric)
	} else {
		r.Metric = types.StringNull()
	}
	r.Usage = nil
	for _, usageItem := range resp.Usage {
		var usage1 BillingUsageUsage
		if usageItem.EndTime != nil {
			usage1.EndTime = types.StringValue(*usageItem.EndTime)
		} else {
			usage1.EndTime = types.StringNull()
		}
		if usageItem.OwnerID != nil {
			usage1.OwnerID = types.StringValue(*usageItem.OwnerID)
		} else {
			usage1.OwnerID = types.StringNull()
		}
		if usageItem.ResourceID != nil {
			usage1.ResourceID = types.StringValue(*usageItem.ResourceID)
		} else {
			usage1.ResourceID = types.StringNull()
		}
		if usageItem.ResourceName != nil {
			usage1.ResourceName = types.StringValue(*usageItem.ResourceName)
		} else {
			usage1.ResourceName = types.StringNull()
		}
		if usageItem.ResourceType != nil {
			usage1.ResourceType = types.StringValue(*usageItem.ResourceType)
		} else {
			usage1.ResourceType = types.StringNull()
		}
		if usageItem.StartTime != nil {
			usage1.StartTime = types.StringValue(*usageItem.StartTime)
		} else {
			usage1.StartTime = types.StringNull()
		}
		if usageItem.Value != nil {
			usage1.Value = types.StringValue(*usageItem.Value)
		} else {
			usage1.Value = types.StringNull()
		}
		r.Usage = append(r.Usage, usage1)
	}
}
