// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"singlestore/internal/sdk/pkg/models/shared"
)

func (r *PrivateConnectionResourceModel) ToCreateSDKType() *shared.PrivateConnectionCreate {
	allowList := new(string)
	if !r.AllowList.IsUnknown() && !r.AllowList.IsNull() {
		*allowList = r.AllowList.ValueString()
	} else {
		allowList = nil
	}
	serviceName := new(string)
	if !r.ServiceName.IsUnknown() && !r.ServiceName.IsNull() {
		*serviceName = r.ServiceName.ValueString()
	} else {
		serviceName = nil
	}
	typeVar := new(shared.PrivateConnectionCreateType)
	if !r.Type.IsUnknown() && !r.Type.IsNull() {
		*typeVar = shared.PrivateConnectionCreateType(r.Type.ValueString())
	} else {
		typeVar = nil
	}
	workspaceGroupID := r.WorkspaceGroupID.ValueString()
	workspaceID := new(string)
	if !r.WorkspaceID.IsUnknown() && !r.WorkspaceID.IsNull() {
		*workspaceID = r.WorkspaceID.ValueString()
	} else {
		workspaceID = nil
	}
	out := shared.PrivateConnectionCreate{
		AllowList:        allowList,
		ServiceName:      serviceName,
		Type:             typeVar,
		WorkspaceGroupID: workspaceGroupID,
		WorkspaceID:      workspaceID,
	}
	return &out
}

func (r *PrivateConnectionResourceModel) RefreshFromCreateResponse(resp *shared.CreatePrivateConnectionResponse) {
	r.PrivateConnectionID = types.StringValue(resp.PrivateConnectionID)
}
